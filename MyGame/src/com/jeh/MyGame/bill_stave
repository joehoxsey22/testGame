package com.jeh.MyGame;

import java.util.Random;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.Vector3;

public class GameScreen implements Screen {
	public MyGame game;
	OrthographicCamera camera;
	SpriteBatch batch;
	
	float stateTime;
	Random rand;
	
	Vector3 touch;
	
	Male joe;
	Female meg;
	
	boolean paused;
	
	int maleX;
	int maleY;
	
	public GameScreen(MyGame game)	{
		this.game = game;
		
		camera = new OrthographicCamera();
		camera.setToOrtho(true, 1920,1080);
		batch = new SpriteBatch();
		rand  = new Random();
		
		joe = new Male();
		meg= new Female();
	}
	
	@Override
	public void render(float delta) {
		Gdx.gl.glClearColor(0.95F,0.95F,0.95F,0.95F);
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		
		camera.update();
		if(paused)	{
			if(Gdx.input.isKeyPressed(Keys.SPACE))	{
				paused = false;
				try	{
					Thread.sleep(100);
				}	catch(InterruptedException e)	{
					e.printStackTrace();
				}
			}
		}else	{
			generalUpdate();
		}
		
		
		batch.setProjectionMatrix(camera.combined);
		batch.begin();	
			batch.draw(joe.image, joe.bounds.x, joe.bounds.y);
			batch.draw(meg.image, meg.bounds.x, meg.bounds.y);
			if(paused)	{
				batch.draw(Assets.pause,250,250);
			}
		batch.end();
	}

	public void generalUpdate() {
		if(Gdx.input.isKeyPressed(Keys.A))	
			joe.bounds.x -=5;
		else if(Gdx.input.isKeyPressed(Keys.D))
			joe.bounds.x +=5;
		else if(Gdx.input.isKeyPressed(Keys.S))
			joe.bounds.y +=5;
		else if(Gdx.input.isKeyPressed(Keys.W))
			joe.bounds.y -=5;
		else if(Gdx.input.isKeyPressed(Keys.SPACE))	{
			paused = true;
			try	{
				Thread.sleep(100);
			}	catch(InterruptedException e)	{
				e.printStackTrace();
			}
		}
		
		if(joe.bounds.overlaps(meg.bounds))
			System.out.println("Meg: Stop touching me!");
	}

	@Override
	public void show() {
	}

	@Override
	public void hide() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void pause() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void resume() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void dispose() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void resize(int width, int height) {
		// TODO Auto-generated method stub
		
	}

}



******************************************************************************************

package com.jeh.MyGame;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.TextureRegion;

public class Assets {
	public static  Texture texture_male;
	public static Sprite male;
	
	public static  Texture texture_female;
	public static Sprite female;
	
	public static  Texture texture_pause;
	public static Sprite pause;
	
	public static void load()	{
		texture_male = new Texture(Gdx.files.internal("menu/Single_MaleWarrior.png"));
		male = new Sprite(texture_male);
		male.flip(false, true);
		
		texture_male = new Texture(Gdx.files.internal("menu/Single_FemaleWarrior.png"));
		female = new Sprite(texture_male);
		female.flip(false, true);
		
		texture_pause = new Texture(Gdx.files.internal("menu/pause.png"));
		pause = new Sprite(texture_pause);
		pause.flip(false, true);
		texture_pause.setFilter(TextureFilter.Linear, TextureFilter.Linear);
	}
}
